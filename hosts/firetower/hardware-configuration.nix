# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config
, lib
, modulesPath
, ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d147face-3f69-42f5-936c-2a18f0db4046";
    fsType = "btrfs";
    options = [ "subvol=@nixos" ];
  };

  boot.initrd.luks.devices."root".device = "/dev/disk/by-uuid/c707dc46-2efb-4819-8254-42acf9ba4c88";

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/d147face-3f69-42f5-936c-2a18f0db4046";
    fsType = "btrfs";
    options = [ "subvol=@nixos-nix" ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/d147face-3f69-42f5-936c-2a18f0db4046";
    fsType = "btrfs";
    options = [ "subvol=@nixos-home" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/C83E-F718";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
